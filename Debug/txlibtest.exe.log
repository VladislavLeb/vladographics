
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{424} normal block at 0x009B9F10, 8 bytes long.
 Data: <        > C0 9E 9B 00 00 00 00 00 
{423} normal block at 0x009B9EC0, 16 bytes long.
 Data: <                > 10 9F 9B 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe, файл: c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h, строка: 11801, функция: struct HBRUSH__ *__cdecl `anonymous-namespace'::TX::txSetFillColor(unsigned long,struct HDC__ *),

Сообщение: Окно рисования не создано или не в порядке.

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x01179464 (32-bit), Flags: Cmdre0, Thread: 0x2950 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x010A7320 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::txSetFillColor() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (11801)

# 1 0x01041869 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: Human::Human() at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (6):

      4: Human::Human(void)
      5: {
=>    6: 	txSetFillColor (TX_PINK);
      7:     txCircle (275, 90, 50);
      8:     txLine (275, 140, 275, 290); // right hand

# 2 0x0110EF7D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (12):

     10:     int WinHeight = GetSystemMetrics (SM_CXSCREEN), WinWidth = GetSystemMetrics (SM_CYSCREEN);
     11:     txCreateWindow (WinHeight, WinWidth);
=>   12: 	Human PersonalHuman;
     13:     Sleep(1000);
     14: 	return 0;

# 3 0x011105F9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 4 0x011107ED in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
# 5 0x74B76359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
# 6 0x77137B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
# 7 0x77137B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Стек вызовов TX:

# 0 in struct HBRUSH__ *__cdecl `anonymous-namespace'::TX::txSetFillColor(unsigned long,struct HDC__ *) at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (11801):

  11799: HBRUSH txSetFillColor (COLORREF color, HDC dc /*= txDC()*/)
  11800:     {
=>11801: $1  if (_TX_DEFAULT_HDC_FAILED (dc)) return NULL;
  11802: 
  11803: $   HBRUSH brush = (color == TX_TRANSPARENT)? (HBRUSH) Win32::GetStockObject (HOLLOW_BRUSH) : Win32::CreateSolidBrush (color);

# 1 in (null) at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (6):

      4: Human::Human(void)
      5: {
=>    6: 	txSetFillColor (TX_PINK);
      7:     txCircle (275, 90, 50);
      8:     txLine (275, 140, 275, 290); // right hand

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 25 2020 23:48:04, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 25 2020 23:48:11

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00E96428, 8 bytes long.
 Data: <xa      > 78 61 E9 00 00 00 00 00 
{415} normal block at 0x00E96178, 16 bytes long.
 Data: <(d              > 28 64 E9 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{805} normal block at 0x014D29F8, 8 bytes long.
 Data: <07M     > 30 37 4D 01 00 00 00 00 
{804} normal block at 0x014D3730, 16 bytes long.
 Data: < )M             > F8 29 4D 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{805} normal block at 0x00D225A8, 8 bytes long.
 Data: <07      > 30 37 D2 00 00 00 00 00 
{804} normal block at 0x00D23730, 16 bytes long.
 Data: < %              > A8 25 D2 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x008D6478, 8 bytes long.
 Data: < a      > C8 61 8D 00 00 00 00 00 
{415} normal block at 0x008D61C8, 16 bytes long.
 Data: <xd              > 78 64 8D 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x010E6348, 8 bytes long.
 Data: < a      > 98 61 0E 01 00 00 00 00 
{415} normal block at 0x010E6198, 16 bytes long.
 Data: <Hc              > 48 63 0E 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x01246460, 8 bytes long.
 Data: < a$     > B0 61 24 01 00 00 00 00 
{415} normal block at 0x012461B0, 16 bytes long.
 Data: <`d$             > 60 64 24 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x012F63D0, 8 bytes long.
 Data: < a/     > 20 61 2F 01 00 00 00 00 
{415} normal block at 0x012F6120, 16 bytes long.
 Data: < c/             > D0 63 2F 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00DF62D8, 8 bytes long.
 Data: <(a      > 28 61 DF 00 00 00 00 00 
{415} normal block at 0x00DF6128, 16 bytes long.
 Data: < b              > D8 62 DF 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00DB63A8, 8 bytes long.
 Data: < `      > F8 60 DB 00 00 00 00 00 
{415} normal block at 0x00DB60F8, 16 bytes long.
 Data: < c              > A8 63 DB 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x009A6400, 8 bytes long.
 Data: <Pa      > 50 61 9A 00 00 00 00 00 
{415} normal block at 0x009A6150, 16 bytes long.
 Data: < d              > 00 64 9A 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x011A63F0, 8 bytes long.
 Data: <@a      > 40 61 1A 01 00 00 00 00 
{415} normal block at 0x011A6140, 16 bytes long.
 Data: < c              > F0 63 1A 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x012F6430, 8 bytes long.
 Data: < a/     > 80 61 2F 01 00 00 00 00 
{415} normal block at 0x012F6180, 16 bytes long.
 Data: <0d/             > 30 64 2F 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00FA6428, 8 bytes long.
 Data: <xa      > 78 61 FA 00 00 00 00 00 
{415} normal block at 0x00FA6178, 16 bytes long.
 Data: <(d              > 28 64 FA 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x01166428, 8 bytes long.
 Data: <xa      > 78 61 16 01 00 00 00 00 
{415} normal block at 0x01166178, 16 bytes long.
 Data: <(d              > 28 64 16 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00FC6430, 8 bytes long.
 Data: < a      > 80 61 FC 00 00 00 00 00 
{415} normal block at 0x00FC6180, 16 bytes long.
 Data: <0d              > 30 64 FC 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00EE63C0, 8 bytes long.
 Data: < a      > 10 61 EE 00 00 00 00 00 
{415} normal block at 0x00EE6110, 16 bytes long.
 Data: < c              > C0 63 EE 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00C96418, 8 bytes long.
 Data: <ha      > 68 61 C9 00 00 00 00 00 
{415} normal block at 0x00C96168, 16 bytes long.
 Data: < d              > 18 64 C9 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00F463D0, 8 bytes long.
 Data: < a      > 20 61 F4 00 00 00 00 00 
{415} normal block at 0x00F46120, 16 bytes long.
 Data: < c              > D0 63 F4 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00F06428, 8 bytes long.
 Data: <xa      > 78 61 F0 00 00 00 00 00 
{415} normal block at 0x00F06178, 16 bytes long.
 Data: <(d              > 28 64 F0 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00866338, 8 bytes long.
 Data: < a      > 88 61 86 00 00 00 00 00 
{415} normal block at 0x00866188, 16 bytes long.
 Data: <8c              > 38 63 86 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00D46438, 8 bytes long.
 Data: < a      > 88 61 D4 00 00 00 00 00 
{415} normal block at 0x00D46188, 16 bytes long.
 Data: <8d              > 38 64 D4 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00D56440, 8 bytes long.
 Data: < a      > 90 61 D5 00 00 00 00 00 
{415} normal block at 0x00D56190, 16 bytes long.
 Data: <@d              > 40 64 D5 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x008D63C0, 8 bytes long.
 Data: < a      > 10 61 8D 00 00 00 00 00 
{415} normal block at 0x008D6110, 16 bytes long.
 Data: < c              > C0 63 8D 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x012C6358, 8 bytes long.
 Data: < a,     > A8 61 2C 01 00 00 00 00 
{415} normal block at 0x012C61A8, 16 bytes long.
 Data: <Xc,             > 58 63 2C 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x015C63F0, 8 bytes long.
 Data: <@a\     > 40 61 5C 01 00 00 00 00 
{415} normal block at 0x015C6140, 16 bytes long.
 Data: < c\             > F0 63 5C 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00966460, 8 bytes long.
 Data: < a      > B0 61 96 00 00 00 00 00 
{415} normal block at 0x009661B0, 16 bytes long.
 Data: <`d              > 60 64 96 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00FF6410, 8 bytes long.
 Data: < a      > A8 61 FF 00 00 00 00 00 
{415} normal block at 0x00FF61A8, 16 bytes long.
 Data: < d              > 10 64 FF 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00E56420, 8 bytes long.
 Data: <pa      > 70 61 E5 00 00 00 00 00 
{415} normal block at 0x00E56170, 16 bytes long.
 Data: < d              > 20 64 E5 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x01186488, 8 bytes long.
 Data: < a      > D8 61 18 01 00 00 00 00 
{415} normal block at 0x011861D8, 16 bytes long.
 Data: < d              > 88 64 18 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00B96428, 8 bytes long.
 Data: <xa      > 78 61 B9 00 00 00 00 00 
{415} normal block at 0x00B96178, 16 bytes long.
 Data: <(d              > 28 64 B9 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00C363E8, 8 bytes long.
 Data: <8a      > 38 61 C3 00 00 00 00 00 
{415} normal block at 0x00C36138, 16 bytes long.
 Data: < c              > E8 63 C3 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00A96410, 8 bytes long.
 Data: <`a      > 60 61 A9 00 00 00 00 00 
{415} normal block at 0x00A96160, 16 bytes long.
 Data: < d              > 10 64 A9 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00CA6430, 8 bytes long.
 Data: < a      > 80 61 CA 00 00 00 00 00 
{415} normal block at 0x00CA6180, 16 bytes long.
 Data: <0d              > 30 64 CA 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00696438, 8 bytes long.
 Data: < ai     > 88 61 69 00 00 00 00 00 
{415} normal block at 0x00696188, 16 bytes long.
 Data: <8di             > 38 64 69 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x012B6428, 8 bytes long.
 Data: <xa+     > 78 61 2B 01 00 00 00 00 
{415} normal block at 0x012B6178, 16 bytes long.
 Data: <(d+             > 28 64 2B 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00536400, 8 bytes long.
 Data: <PaS     > 50 61 53 00 00 00 00 00 
{415} normal block at 0x00536150, 16 bytes long.
 Data: < dS             > 00 64 53 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00866400, 8 bytes long.
 Data: <Pa      > 50 61 86 00 00 00 00 00 
{415} normal block at 0x00866150, 16 bytes long.
 Data: < d              > 00 64 86 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x013063F8, 8 bytes long.
 Data: <Ha0     > 48 61 30 01 00 00 00 00 
{415} normal block at 0x01306148, 16 bytes long.
 Data: < c0             > F8 63 30 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x014F63F8, 8 bytes long.
 Data: <HaO     > 48 61 4F 01 00 00 00 00 
{415} normal block at 0x014F6148, 16 bytes long.
 Data: < cO             > F8 63 4F 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00686400, 8 bytes long.
 Data: <Pah     > 50 61 68 00 00 00 00 00 
{415} normal block at 0x00686150, 16 bytes long.
 Data: < dh             > 00 64 68 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00DF6428, 8 bytes long.
 Data: <xa      > 78 61 DF 00 00 00 00 00 
{415} normal block at 0x00DF6178, 16 bytes long.
 Data: <(d              > 28 64 DF 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00A46440, 8 bytes long.
 Data: < a      > 90 61 A4 00 00 00 00 00 
{415} normal block at 0x00A46190, 16 bytes long.
 Data: <@d              > 40 64 A4 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x01366428, 8 bytes long.
 Data: <xa6     > 78 61 36 01 00 00 00 00 
{415} normal block at 0x01366178, 16 bytes long.
 Data: <(d6             > 28 64 36 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00D06468, 8 bytes long.
 Data: < a      > B8 61 D0 00 00 00 00 00 
{415} normal block at 0x00D061B8, 16 bytes long.
 Data: <hd              > 68 64 D0 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x007E6428, 8 bytes long.
 Data: <xa~     > 78 61 7E 00 00 00 00 00 
{415} normal block at 0x007E6178, 16 bytes long.
 Data: <(d~             > 28 64 7E 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x01106428, 8 bytes long.
 Data: <xa      > 78 61 10 01 00 00 00 00 
{415} normal block at 0x01106178, 16 bytes long.
 Data: <(d              > 28 64 10 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x005D6420, 8 bytes long.
 Data: <pa]     > 70 61 5D 00 00 00 00 00 
{415} normal block at 0x005D6170, 16 bytes long.
 Data: < d]             > 20 64 5D 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x01226400, 8 bytes long.
 Data: <Pa"     > 50 61 22 01 00 00 00 00 
{415} normal block at 0x01226150, 16 bytes long.
 Data: < d"             > 00 64 22 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00D66438, 8 bytes long.
 Data: < a      > 88 61 D6 00 00 00 00 00 
{415} normal block at 0x00D66188, 16 bytes long.
 Data: <8d              > 38 64 D6 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x01306438, 8 bytes long.
 Data: < a0     > 88 61 30 01 00 00 00 00 
{415} normal block at 0x01306188, 16 bytes long.
 Data: <8d0             > 38 64 30 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x015E63F8, 8 bytes long.
 Data: <Ha^     > 48 61 5E 01 00 00 00 00 
{415} normal block at 0x015E6148, 16 bytes long.
 Data: < c^             > F8 63 5E 01 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{416} normal block at 0x00D76400, 8 bytes long.
 Data: <Pa      > 50 61 D7 00 00 00 00 00 
{415} normal block at 0x00D76150, 16 bytes long.
 Data: < d              > 00 64 D7 00 00 00 00 00 00 00 00 00 00 00 00 00 
Object dump complete.

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe, файл: c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h, строка: 7640, функция: struct HWND__ *__cdecl `anonymous-namespace'::TX::txCreateWindow(double,double,bool),

Сообщение: Окно рисования уже создано!

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x0036A464 (32-bit), Flags: CMdRe0, Thread: 0x3C9C (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0027ED9A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::txCreateWindow() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (7640)

# 1 0x00236D4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: Human::Init() at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (8):

      6: 	_txWindowStyle &= ~WS_CAPTION; // FullScreen: окно без заголовка, размером с экран
      7:     int WinHeight = GetSystemMetrics (SM_CXSCREEN), WinWidth = GetSystemMetrics (SM_CYSCREEN);
=>    8:     txCreateWindow (WinHeight, WinWidth);
      9: }
     10: 

# 2 0x002318AF in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: Human::Human() at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (38):

     36: Human::Human (int x, int y, int sizeX, int sizeY, int Height)
     37: {
=>   38: 	Init ();
     39: 	srand (time (NULL));
     40: 	H_COLOR = RGB (rand(), rand(), rand());

# 3 0x002FFA38 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (50):

     48: {
     49: 	Human PersonalHuman (50, 756, 2, 2, 50);
=>   50: 	Human PersonalHumanClone (200, 756, 2, 2, 50);
     51: 	while (true)
     52: 	{

# 4 0x00301119 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 5 0x0030130D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
# 6 0x74B76359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
# 7 0x77137B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
# 8 0x77137B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Стек вызовов TX:

# 0 in struct HWND__ *__cdecl `anonymous-namespace'::TX::txCreateWindow(double,double,bool) at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (7640):

   7638:         {
   7639: $       SetLastErrorEx (ERROR_INVALID_DATA, 0);
=> 7640: $       _TX_ON_DEBUG (TX_ERROR ("\a" "Окно рисования уже создано!"));
   7641: $       return wnd;
   7642:         }

# 1 in (null) at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (8):

      6: 	_txWindowStyle &= ~WS_CAPTION; // FullScreen: окно без заголовка, размером с экран
      7:     int WinHeight = GetSystemMetrics (SM_CXSCREEN), WinWidth = GetSystemMetrics (SM_CYSCREEN);
=>    8:     txCreateWindow (WinHeight, WinWidth);
      9: }
     10: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 26 2020 09:05:57, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 26 2020 09:06:04

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe, файл: c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h, строка: 11801, функция: struct HBRUSH__ *__cdecl `anonymous-namespace'::TX::txSetFillColor(unsigned long,struct HDC__ *),

Сообщение: Окно рисования не создано или не в порядке.

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00AAA464 (32-bit), Flags: Cmdre0, Thread: 0x3810 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x009D7D10 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::txSetFillColor() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (11801)

# 1 0x00976316 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: Human::DrawHuman() at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (34):

     32: void Human::DrawHuman()
     33: {
=>   34: 	txSetFillColor (TX_BLACK);
     35:     txClear ();
     36: 	txSetColor(H_COLOR);

# 2 0x00971A5F in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: Human::Human() at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (55):

     53: 	humanCoord.rightHandX = humanCoord.x + height * 2;
     54: 	humanCoord.rightHandY = humanCoord.y - height * 2;
=>   55: 	DrawHuman ();
     56: }
     57: 

# 3 0x00A3FD42 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (17):

     15:     int WinHeight = GetSystemMetrics (SM_CXSCREEN), WinWidth = GetSystemMetrics (SM_CYSCREEN);
     16:     txCreateWindow (WinHeight, WinWidth);
=>   17: 	Human PersonalHuman (50, 756, 50);
     18: 	while (true)
     19: 	{

# 4 0x00A41419 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 5 0x00A4160D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
# 6 0x74B76359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
# 7 0x77137B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
# 8 0x77137B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Стек вызовов TX:

# 0 in struct HBRUSH__ *__cdecl `anonymous-namespace'::TX::txSetFillColor(unsigned long,struct HDC__ *) at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (11801):

  11799: HBRUSH txSetFillColor (COLORREF color, HDC dc /*= txDC()*/)
  11800:     {
=>11801: $1  if (_TX_DEFAULT_HDC_FAILED (dc)) return NULL;
  11802: 
  11803: $   HBRUSH brush = (color == TX_TRANSPARENT)? (HBRUSH) Win32::GetStockObject (HOLLOW_BRUSH) : Win32::CreateSolidBrush (color);

# 1 in (null) at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (34):

     32: void Human::DrawHuman()
     33: {
=>   34: 	txSetFillColor (TX_BLACK);
     35:     txClear ();
     36: 	txSetColor(H_COLOR);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 26 2020 11:51:00, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 26 2020 11:51:08

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe, файл: c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h, строка: 11801, функция: struct HBRUSH__ *__cdecl `anonymous-namespace'::TX::txSetFillColor(unsigned long,struct HDC__ *),

Сообщение: Окно рисования не создано или не в порядке.

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x0105A464 (32-bit), Flags: Cmdre0, Thread: 0x2214 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x00F87D10 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::txSetFillColor() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (11801)

# 1 0x00F26316 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: Human::DrawHuman() at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (34):

     32: void Human::DrawHuman()
     33: {
=>   34: 	txSetFillColor (TX_BLACK);
     35:     txClear ();
     36: 	txSetColor(H_COLOR);

# 2 0x00F21A5F in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: Human::Human() at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (55):

     53: 	humanCoord.rightHandX = humanCoord.x + height * 2;
     54: 	humanCoord.rightHandY = humanCoord.y - height * 2;
=>   55: 	DrawHuman ();
     56: }
     57: 

# 3 0x00FEFD31 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (17):

     15:     txCreateWindow (WinHeight, WinWidth/2);
     16: 
=>   17: 	Human PersonalHuman (50, 756, 50);
     18: 
     19: 	//while (true)

# 4 0x00FF13C9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 5 0x00FF15BD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
# 6 0x74B76359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
# 7 0x77137B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
# 8 0x77137B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Стек вызовов TX:

# 0 in struct HBRUSH__ *__cdecl `anonymous-namespace'::TX::txSetFillColor(unsigned long,struct HDC__ *) at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (11801):

  11799: HBRUSH txSetFillColor (COLORREF color, HDC dc /*= txDC()*/)
  11800:     {
=>11801: $1  if (_TX_DEFAULT_HDC_FAILED (dc)) return NULL;
  11802: 
  11803: $   HBRUSH brush = (color == TX_TRANSPARENT)? (HBRUSH) Win32::GetStockObject (HOLLOW_BRUSH) : Win32::CreateSolidBrush (color);

# 1 in (null) at c:\bass24\c\livespec\txlibtest\txlibtest\human.cpp (34):

     32: void Human::DrawHuman()
     33: {
=>   34: 	txSetFillColor (TX_BLACK);
     35:     txClear ();
     36: 	txSetColor(H_COLOR);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 26 2020 11:51:00, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 26 2020 11:54:46

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{1257} normal block at 0x016E6628, 12 bytes long.
 Data: <        |   > 00 00 00 00 C6 02 00 00 7C 01 00 00 
Object dump complete.

--------------------------------------------------
TXLib предупреждает:

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: #1: {ИСКЛЮЧЕНИЕ}
Множественные ловушки с плавающей точкой. (0xC00002B5) при выполнении кода по адресу 0x002E9E7C в функции vlado::GetArgs() в файле c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp на строке 153. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x003D5894 (32-bit), Flags: Cmdre0, Thread: 0x1C60 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x002E9E7C in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (153):

    151: 			//std::cout << i;
    152: 			//if (i != 2) std::cout << " "; 
=>  153: 			args[i] /= pow (dec, step);
    154: 			step = 2;
    155: 			i++;

# 1 0x00326382 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (189):

    187: 			const int count = 3;
    188: 			int args[count];
=>  189: 			vlado::GetArgs(args, &fin);
    190: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    191: 

# 2 0x002BFA76 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

# 3 0x002BDC2D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

# 4 0x002E5FA0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

# 5 0x0034FE69 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 6 0x0035005D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
# 7 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
# 8 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
# 9 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 10:26:32, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 10:38:28

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: #1: {ИСКЛЮЧЕНИЕ}
Множественные ловушки с плавающей точкой. (0xC00002B5) при выполнении кода по адресу 0x002E9E7C в функции vlado::GetArgs() в файле c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp на строке 153. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x003D5894 (32-bit), Flags: Cmdre0, Thread: 0x1C60 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x002E9E7C in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (153):

    151: 			//std::cout << i;
    152: 			//if (i != 2) std::cout << " "; 
=>  153: 			args[i] /= pow (dec, step);
    154: 			step = 2;
    155: 			i++;

# 1 0x00326382 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (189):

    187: 			const int count = 3;
    188: 			int args[count];
=>  189: 			vlado::GetArgs(args, &fin);
    190: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    191: 

# 2 0x002BFA76 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

# 3 0x002BDC2D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

# 4 0x002E5FA0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

# 5 0x0034FE69 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 6 0x0035005D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
# 7 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
# 8 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
# 9 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 10:26:32, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 10:38:28

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: #1: {ИСКЛЮЧЕНИЕ}
Множественные ловушки с плавающей точкой. (0xC00002B5) при выполнении кода по адресу 0x00E49E7C в функции vlado::GetArgs() в файле c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp на строке 153. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00F35894 (32-bit), Flags: Cmdre0, Thread: 0xFD0 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x00E49E7C in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (153):

    151: 			//std::cout << i;
    152: 			//if (i != 2) std::cout << " "; 
=>  153: 			args[i] /= pow (dec, step);
    154: 			step = 2;
    155: 			i++;

# 1 0x00E8637E in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (189):

    187: 			const int count = 3;
    188: 			int args[count];
=>  189: 			vlado::GetArgs(args, &fin);
    190: 			//std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    191: 

# 2 0x00E1FA76 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

# 3 0x00E1DC2D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

# 4 0x00E45FA0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

# 5 0x00EAFE69 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 6 0x00EB005D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
# 7 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
# 8 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
# 9 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 10:26:32, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 10:40:12

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: #1: {ИСКЛЮЧЕНИЕ}
Множественные ловушки с плавающей точкой. (0xC00002B5) при выполнении кода по адресу 0x00E49E7C в функции vlado::GetArgs() в файле c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp на строке 153. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00F35894 (32-bit), Flags: Cmdre0, Thread: 0xFD0 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x00E49E7C in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (153):

    151: 			//std::cout << i;
    152: 			//if (i != 2) std::cout << " "; 
=>  153: 			args[i] /= pow (dec, step);
    154: 			step = 2;
    155: 			i++;

# 1 0x00E8637E in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (189):

    187: 			const int count = 3;
    188: 			int args[count];
=>  189: 			vlado::GetArgs(args, &fin);
    190: 			//std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    191: 

# 2 0x00E1FA76 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

# 3 0x00E1DC2D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

# 4 0x00E45FA0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

# 5 0x00EAFE69 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 6 0x00EB005D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
# 7 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
# 8 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
# 9 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 10:26:32, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 10:40:12

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0xE2266734): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00EC5894 (32-bit), Flags: Cmdre0, Thread: 0xA40 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00CD66AA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x6207989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x62073F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x6207BF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x62073784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x6207373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x62012E0B in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: chvalidator_l()
# 7 0x62010C9E in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit_l()
# 8 0x62011119 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit()

# 9 0x00DD9E65 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (172):

    170: 	{
    171: 		fin -> get(letter);
=>  172: 		if (isdigit(letter))
    173: 		{
    174: 			num += letter;

#10 0x00E16605 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (215):

    213: 			const int count = 3;
    214: 			int args[count];
=>  215: 			vlado::GetArgs(args, &fin);
    216: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    217: 			vlado::Circle (args[0], args[1], args[2]);

#11 0x00DAFA96 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

#12 0x00DADC4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

#13 0x00DD5FC0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

#14 0x00E405B9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#15 0x00E407AD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#16 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#17 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#18 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 11:47:59, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 11:57:02

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0x49599B9F): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00EC5894 (32-bit), Flags: Cmdre0, Thread: 0x19A8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00CD66AA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x61FA989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x61FA3F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x61FABF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x61FA3784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x61FA373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x61F42E0B in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: chvalidator_l()
# 7 0x61F40C9E in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit_l()
# 8 0x61F41119 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit()

# 9 0x00DD9E65 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (172):

    170: 	{
    171: 		fin -> get(letter);
=>  172: 		if (isdigit(letter))
    173: 		{
    174: 			num += letter;

#10 0x00E16605 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (215):

    213: 			const int count = 3;
    214: 			int args[count];
=>  215: 			vlado::GetArgs(args, &fin);
    216: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    217: 			vlado::Circle (args[0], args[1], args[2]);

#11 0x00DAFA96 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

#12 0x00DADC4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

#13 0x00DD5FC0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

#14 0x00E405B9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#15 0x00E407AD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#16 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#17 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#18 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 11:47:59, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 12:02:22

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0x52A5422D): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00EC5894 (32-bit), Flags: Cmdre0, Thread: 0x2458 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00CD66AA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x61FA989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x61FA3F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x61FABF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x61FA3784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x61FA373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x61F42E0B in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: chvalidator_l()
# 7 0x61F40C9E in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit_l()
# 8 0x61F41119 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit()

# 9 0x00DD9E65 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (172):

    170: 	{
    171: 		fin -> get(letter);
=>  172: 		if (isdigit(letter))
    173: 		{
    174: 			num += letter;

#10 0x00E16605 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (215):

    213: 			const int count = 3;
    214: 			int args[count];
=>  215: 			vlado::GetArgs(args, &fin);
    216: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    217: 			vlado::Circle (args[0], args[1], args[2]);

#11 0x00DAFA96 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

#12 0x00DADC4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

#13 0x00DD5FC0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

#14 0x00E405B9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#15 0x00E407AD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#16 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#17 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#18 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 11:47:59, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 12:05:03

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0x6FE608B): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00EC5894 (32-bit), Flags: Cmdre0, Thread: 0x2D34 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00CD66AA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x61FA989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x61FA3F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x61FABF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x61FA3784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x61FA373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x61F42E0B in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: chvalidator_l()
# 7 0x61F40C9E in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit_l()
# 8 0x61F41119 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit()

# 9 0x00DD9E65 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (172):

    170: 	{
    171: 		fin -> get(letter);
=>  172: 		if (isdigit(letter))
    173: 		{
    174: 			num += letter;

#10 0x00E16605 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (215):

    213: 			const int count = 3;
    214: 			int args[count];
=>  215: 			vlado::GetArgs(args, &fin);
    216: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    217: 			vlado::Circle (args[0], args[1], args[2]);

#11 0x00DAFA96 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

#12 0x00DADC4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

#13 0x00DD5FC0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

#14 0x00E405B9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#15 0x00E407AD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#16 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#17 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#18 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 11:47:59, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 12:06:08

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0x912A40E4): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00F85894 (32-bit), Flags: Cmdre0, Thread: 0x17F0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00D966AA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x6207989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x62073F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x6207BF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x62073784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x6207373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x62012E0B in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: chvalidator_l()
# 7 0x62010C9E in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit_l()
# 8 0x62011119 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit()

# 9 0x00E99E65 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (172):

    170: 	{
    171: 		fin -> get(letter);
=>  172: 		if (isdigit(letter))
    173: 		{
    174: 			num += letter;

#10 0x00ED6605 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (215):

    213: 			const int count = 3;
    214: 			int args[count];
=>  215: 			vlado::GetArgs(args, &fin);
    216: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    217: 			vlado::Circle (args[0], args[1], args[2]);

#11 0x00E6FA96 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

#12 0x00E6DC4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

#13 0x00E95FC0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

#14 0x00F005B9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#15 0x00F007AD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#16 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#17 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#18 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 11:47:59, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 12:07:37

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0xFF354337): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x01065894 (32-bit), Flags: Cmdre0, Thread: 0x1B50 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00E766AA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x61FA989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x61FA3F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x61FABF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x61FA3784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x61FA373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x61F42E0B in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: chvalidator_l()
# 7 0x61F40C9E in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit_l()
# 8 0x61F41119 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit()

# 9 0x00F79E65 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (172):

    170: 	{
    171: 		fin -> get(letter);
=>  172: 		if (isdigit(letter))
    173: 		{
    174: 			num += letter;

#10 0x00FB6605 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (215):

    213: 			const int count = 3;
    214: 			int args[count];
=>  215: 			vlado::GetArgs(args, &fin);
    216: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    217: 			vlado::Circle (args[0], args[1], args[2]);

#11 0x00F4FA96 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

#12 0x00F4DC4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

#13 0x00F75FC0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

#14 0x00FE05B9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#15 0x00FE07AD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#16 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#17 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#18 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 11:47:59, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 12:08:55

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0x4D0DDD02): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x01155894 (32-bit), Flags: Cmdre0, Thread: 0x296C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00F666AA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x6207989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x62073F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x6207BF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x62073784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x6207373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x62012E0B in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: chvalidator_l()
# 7 0x62010C9E in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit_l()
# 8 0x62011119 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit()

# 9 0x01069E65 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (172):

    170: 	{
    171: 		fin -> get(letter);
=>  172: 		if (isdigit(letter))
    173: 		{
    174: 			num += letter;

#10 0x010A65E8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (215):

    213: 			const int count = 3;
    214: 			int args[count];
=>  215: 			vlado::GetArgs(args, &fin);
    216: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    217: 			vlado::Circle (args[0], args[1], args[2]);

#11 0x0103FA96 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

#12 0x0103DC4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

#13 0x01065FC0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

#14 0x010D05B9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#15 0x010D07AD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#16 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#17 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#18 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 11:47:59, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 12:11:13

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400] - ERROR: Внимание: Обнаружены утечки памяти!

Detected memory leaks!
Dumping objects ->
{3094} normal block at 0x01227088, 8 bytes long.
 Data: <        > 04 F5 0F 01 00 00 00 00 
{1016} normal block at 0x01227578, 8 bytes long.
 Data: <T       > 54 F7 0F 01 00 00 00 00 
{823} normal block at 0x012276D8, 255 bytes long.
 Data: <test.txt        > 74 65 73 74 2E 74 78 74 00 CD CD CD CD CD CD CD 
{422} normal block at 0x012260A0, 8 bytes long.
 Data: <h       > 68 FB 0F 01 00 00 00 00 
Object dump complete.
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0x49FF5036): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00395894 (32-bit), Flags: Cmdre0, Thread: 0x126C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x001A66AA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x6207989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x62073F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x6207BF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x62073784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x6207373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x62012E0B in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: chvalidator_l()
# 7 0x62010C9E in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit_l()
# 8 0x62011119 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit()

# 9 0x002A9E65 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (172):

    170: 	{
    171: 		fin -> get(letter);
=>  172: 		if (isdigit(letter))
    173: 		{
    174: 			num += letter;

#10 0x002E6602 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (215):

    213: 			const int count = 3;
    214: 			int args[count];
=>  215: 			vlado::GetArgs(args, &fin);
    216: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    217: 			vlado::Circle (args[0], args[1], args[2]);

#11 0x0027FA96 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

#12 0x0027DC4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

#13 0x002A5FC0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

#14 0x003105B9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#15 0x003107AD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#16 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#17 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#18 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 11:47:59, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 12:14:39

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
f:\dd\vctools\crt_bld\self_x86\crt\src\isctype.c(68) : Assertion failed: c >= -1 && c <= 255

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0x926A206A): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00CC5894 (32-bit), Flags: Cmdre0, Thread: 0xD14 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00AD66AA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x61FA989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x61FA3F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x61FABF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x61FA3784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x61FA373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x61F42E0B in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: chvalidator_l()
# 7 0x61F40C9E in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit_l()
# 8 0x61F41119 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: isdigit()

# 9 0x00BD9E65 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::GetArgs() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (172):

    170: 	{
    171: 		fin -> get(letter);
=>  172: 		if (isdigit(letter))
    173: 		{
    174: 			num += letter;

#10 0x00C16605 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::drawByFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (215):

    213: 			const int count = 3;
    214: 			int args[count];
=>  215: 			vlado::GetArgs(args, &fin);
    216: 			std::cout << args[0] << " " << args[1] << " " << args[2] << std::endl;
    217: 			vlado::Circle (args[0], args[1], args[2]);

#11 0x00BAFA96 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (87):

     85: 		char *path = new char[255];
     86: 		std::cin >> path;
=>   87: 		vlado::drawByFile (path);
     88: 		delete [] path;
     89: 	}

#12 0x00BADC4D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (146):

    144: 	std::cout << "If you want to create Human enter the number 7 and press ENTER button" << std::endl;
    145: 	std::cin >> command;
=>  146: 	doCommand (command, PersonalHuman);
    147: }
    148: 

#13 0x00BD5FC0 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (27):

     25: 	{
     26: 		reDraw (&PersonalHuman);
=>   27: 		askCommand (&PersonalHuman);
     28: 	//	vlado::UpdateWindow(0);
     29: 	}

#14 0x00C405B9 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#15 0x00C407AD in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#16 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#17 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#18 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 11:47:59, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 12:24:04

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector(72) : Assertion failed: vector iterator not dereferencable

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (22, 0xDB5F843): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x008EE15C (32-bit), Flags: Cmdre0, Thread: 0x2CB0 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0068D26A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: `anonymous namespace'::TX::_txOnSignal() at c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h (9746)
# 1 0x618E989F in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: raise()
# 2 0x618E3F75 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtSetReportHookW2()
# 3 0x618EBF13 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: VCrtDbgReportW()
# 4 0x618E3784 in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 5 0x618E373D in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: CrtDbgReportW()
# 6 0x6281B91E in C:\WINDOWS\SYSTEM32\MSVCP110D.dll: std::_Debug_message()

# 7 0x0078D7D6 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Character> > >::operator*() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector (72):

     70: 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
     71: 			{	// report error
=>   72: 			_DEBUG_ERROR("vector iterator not dereferencable");
     73: 			_SCL_SECURE_OUT_OF_RANGE;
     74: 			}

# 8 0x0078DA0F in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Character> > >::operator*() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector (324):

    322: 	reference operator*() const
    323: 		{	// return designated object
=>  324: 		return ((reference)**(_Mybase *)this);
    325: 		}
    326: 

# 9 0x0078D6CF in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Character> > >::operator->() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector (329):

    327: 	pointer operator->() const
    328: 		{	// return pointer to class object
=>  329: 		return (_STD pointer_traits<pointer>::pointer_to(**this));
    330: 		}
    331: 

#10 0x007CBA49 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (145):

    143: 		delete [] path;
    144: 		
=>  145: 		MyCharacter -> end() ->loadFromFile();
    146: 
    147: 		

#11 0x007C93EC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (172):

    170: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    171: 	std::cin >> command;
=>  172: 	doCommand (command, PersonalHuman, MyCharacter);
    173: }
    174: 

#12 0x007F20FA in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (29):

     27: 	{
     28: 		reDraw (&PersonalHuman);
=>   29: 		askCommand (&PersonalHuman, &MyCharacters);
     30: 	//	vlado::UpdateWindow(0);
     31: 	}

#13 0x0085C899 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
#14 0x0085CA8D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#15 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#16 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#17 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 14:34:36, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 14:34:44

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x0127516C (32-bit), Flags: Cmdre0, Thread: 0x24E0 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x0101F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x0101F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00FDE632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x011BA6CE in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (324):

    322: 			int args[count];
    323: 			vlado::GetArgs(args, &fin);
=>  324: 			AnimeCommands[AnimeComNum].name = command;
    325: 			AnimeCommands[AnimeComNum].COLOR = args[0];
    326: 			AnimeComNum++;

# 5 0x011538B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x011516CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x0117A80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x011E2319 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x011E250D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:12:10, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:21:33

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x0127516C (32-bit), Flags: Cmdre0, Thread: 0x24E0 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x0101F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x0101F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00FDE632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x011BA6CE in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (324):

    322: 			int args[count];
    323: 			vlado::GetArgs(args, &fin);
=>  324: 			AnimeCommands[AnimeComNum].name = command;
    325: 			AnimeCommands[AnimeComNum].COLOR = args[0];
    326: 			AnimeComNum++;

# 5 0x011538B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x011516CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x0117A80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x011E2319 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x011E250D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:12:10, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:21:34

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x010D516C (32-bit), Flags: Cmdre0, Thread: 0x2620 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x00E7F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x00E7F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00E3E632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x0101A75D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (334):

    332: 			vlado::GetArgs(args, &fin);
    333: 			
=>  334: 			AnimeCommands[AnimeComNum].name = command;
    335: 			AnimeCommands[AnimeComNum].x = args[0];
    336: 			AnimeCommands[AnimeComNum].y = args[1];

# 5 0x00FB38B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x00FB16CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x00FDA80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x01042329 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x0104251D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:25:09, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:25:17

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x010D516C (32-bit), Flags: Cmdre0, Thread: 0x2620 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x00E7F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x00E7F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00E3E632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x0101A75D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (334):

    332: 			vlado::GetArgs(args, &fin);
    333: 			
=>  334: 			AnimeCommands[AnimeComNum].name = command;
    335: 			AnimeCommands[AnimeComNum].x = args[0];
    336: 			AnimeCommands[AnimeComNum].y = args[1];

# 5 0x00FB38B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x00FB16CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x00FDA80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x01042329 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x0104251D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:25:09, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:25:16

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00F6516C (32-bit), Flags: Cmdre0, Thread: 0x28E4 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x00D0F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x00D0F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00CCE632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x00EAA75D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (334):

    332: 			vlado::GetArgs(args, &fin);
    333: 			
=>  334: 			AnimeCommands[AnimeComNum].name = command;
    335: 			AnimeCommands[AnimeComNum].x = args[0];
    336: 			AnimeCommands[AnimeComNum].y = args[1];

# 5 0x00E438B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x00E416CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x00E6A80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x00ED2329 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x00ED251D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:25:09, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:25:56

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00F6516C (32-bit), Flags: Cmdre0, Thread: 0x28E4 (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x00D0F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x00D0F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00CCE632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x00EAA75D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (334):

    332: 			vlado::GetArgs(args, &fin);
    333: 			
=>  334: 			AnimeCommands[AnimeComNum].name = command;
    335: 			AnimeCommands[AnimeComNum].x = args[0];
    336: 			AnimeCommands[AnimeComNum].y = args[1];

# 5 0x00E438B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x00E416CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x00E6A80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x00ED2329 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x00ED251D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:25:09, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:25:57

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00FF516C (32-bit), Flags: Cmdre0, Thread: 0x28FC (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x00D9F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x00D9F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00D5E632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x00F3A811 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (344):

    342: 		if (command == "txClear")
    343: 		{
=>  344: 			AnimeCommands[AnimeComNum].name = command;
    345: 			AnimeComNum++;
    346: 			vlado::Clear ();

# 5 0x00ED38B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x00ED16CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x00EFA80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x00F62329 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x00F6251D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:26:53, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:31:59

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x00FF516C (32-bit), Flags: Cmdre0, Thread: 0x28FC (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x00D9F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x00D9F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00D5E632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x00F3A811 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (344):

    342: 		if (command == "txClear")
    343: 		{
=>  344: 			AnimeCommands[AnimeComNum].name = command;
    345: 			AnimeComNum++;
    346: 			vlado::Clear ();

# 5 0x00ED38B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x00ED16CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x00EFA80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x00F62329 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x00F6251D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:26:53, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:31:58

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x0128516C (32-bit), Flags: Cmdre0, Thread: 0x1BEC (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x0102F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x0102F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00FEE632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x011CA811 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (344):

    342: 		if (command == "txClear")
    343: 		{
=>  344: 			AnimeCommands[AnimeComNum].name = command;
    345: 			AnimeComNum++;
    346: 			vlado::Clear ();

# 5 0x011638B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x011616CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x0118A80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x011F2329 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x011F251D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:36:54, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:43:28

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x6183E89A в функции memcpy(). Попытка записать данные по адресу 0x00000001. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400], Instance: 0x0128516C (32-bit), Flags: Cmdre0, Thread: 0x1BEC (Main), errno: 13 (Permission denied), _doserrno: 21 (Is a directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x6183E89A in C:\WINDOWS\SYSTEM32\MSVCR110D.dll: memcpy()

# 1 0x0102F1F2 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1116):

   1114: 			{	// make room and assign new stuff
   1115: 			_Traits::copy(this->_Myptr(),
=> 1116: 				_Right._Myptr() + _Roff, _Num);
   1117: 			_Eos(_Num);
   1118: 			}

# 2 0x0102F10B in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (1099):

   1097: 	_Myt& assign(const _Myt& _Right)
   1098: 		{	// assign _Right
=> 1099: 		return (assign(_Right, 0, npos));
   1100: 		}
   1101: 

# 3 0x00FEE632 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=() at c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring (982):

    980:  #endif /* _HAS_CPP0X */
    981: 
=>  982: 			assign(_Right);
    983: 			}
    984: 		return (*this);

# 4 0x011CA811 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: vlado::readFromFile() at c:\bass24\c\livespec\txlibtest\txlibtest\vladograpics.cpp (344):

    342: 		if (command == "txClear")
    343: 		{
=>  344: 			AnimeCommands[AnimeComNum].name = command;
    345: 			AnimeComNum++;
    346: 			vlado::Clear ();

# 5 0x011638B8 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: doCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (97):

     95: 		string path;
     96: 		std::cin >> path;
=>   97: 		vlado::readFromFile(path);
     98: 		vlado::drawByFile();
     99: 	}

# 6 0x011616CC in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: askCommand() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (213):

    211: 	std::cout << "If you want to add character from file enter the number 8 and press ENTER button" << std::endl;
    212: 	std::cin >> command;
=>  213: 	doCommand (command, PersonalHuman, MyCharacter);
    214: }
    215: 

# 7 0x0118A80A in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmain() at c:\bass24\c\livespec\txlibtest\txlibtest\txlibtest.cpp (30):

     28: 	{
     29: 		reDraw (&PersonalHuman);
=>   30: 		askCommand (&PersonalHuman, &MyCharacters);
     31: 	//	vlado::UpdateWindow(0);
     32: 	}

# 8 0x011F2329 in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: __tmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (533)
# 9 0x011F251D in C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe: wmainCRTStartup() at f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c (376)
#10 0x75C56359 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#11 0x77BE7B74 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#12 0x77BE7B44 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 165, Date: 2020-02-23 20:43:39 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\bass24\c\livespec\txlibtest\txlibtest\txlib.h
Compiled:	Feb 28 2020 20:36:54, MSVS 1700, std=199711L, MSVC Runtime, 32-bit, DEBUG
Started:	Feb 28 2020 20:43:28

Run file:	C:\bass24\c\livespec\txlibtest\Debug\txlibtest.exe
Directory:	C:\bass24\c\livespec\txlibtest\txlibtest

--------------------------------------------------
